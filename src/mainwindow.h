#ifndef MAINWINDOW_H
#define MAINWINDOW_H

// Qt includes
#include <QMainWindow>
#include <QtSql>

// Project includes
#include "src/commonparameters.h"


using namespace  std;

class Employee{
public:
    int id;
    QString name;
    int supervisor;

    QString toString(){
        return name + "(" + QString::number(id) + ")";
    }

};


class TreeNode{
public:

    TreeNode* parent;
    Employee node;
    QList<TreeNode> successors;

    TreeNode(){ parent = NULL; }
    TreeNode (Employee _node, TreeNode* _parent)
    : node(_node),parent(_parent) {
    }

    void set(Employee node){
        this->node = node;
    }

    Employee get(){
        return node;
    }

    QList<TreeNode> succ() {
        return successors;
    }
    void addChild(TreeNode t) {
        successors.append(t);
    }


};



namespace Ui {
class MainWindow;
}

class MainWindow : public QMainWindow
{
    Q_OBJECT

public:

    QList<Employee> employee_list;

    /*!
     * \brief MainWindow Public constructor/Destructor
     * \param parent
     */
    explicit MainWindow(QWidget *parent = 0);
    ~MainWindow();


    /*!
     * Writes a line to the visual console
     */
    void consoleWrite(const QString &line);

    /*!
     * This function is called after the constructor so that the logs are displayed
     * \return the
     */
    void initialize();

    /*!
     * \brief loadHierarchy loads the hierarchy from the SQL
     */
    void loadHierarchy();




    void loadChildren(TreeNode& treeNode);

    int getLevel(TreeNode* treeNode);
    int getNSUP(TreeNode* treeNode);
    int getNTSUP(TreeNode* treeNode);
    int getDepth(TreeNode* treeNode);

    int level;
    int ntsup;
    int depth;


private:

    /*!
     * \brief ui pointer to the User Interface generated by QtDesigner
     */
    Ui::MainWindow *ui;

signals:
    /*!
     * \brief consoleWriteSignal Used for writing into the GUI console. There is a threading issue here
     * \param line
     */
    void consoleWriteSignal(QString line);

    /*!
     * \brief quit terminates the current application
     */
    void quit();
};

#endif // MAINWINDOW_H
